name: Deployment Production
on:
  push:
    branches:
      - main

env:
  DOCKER_BUILDKIT: 1
  DOCKER_TLS_CERTDIR: "/certs"
  IMAGE_CI: ${{ secrets.AWS_ECR_REGISTRY }}/seuguru-frontend-ci
  IMAGE_CD: ${{ secrets.AWS_ECR_REGISTRY }}/seuguru-frontend
  IMAGE_TAG: ${{ github.sha }}
  LATEST_TAG: latest
  HEROKU_APP_NAME: ${{ secrets.HEROKU_PROD_APP_NAME }}

jobs:

  build:
    name: Build production image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_CD_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_CD_ACCESS_KEY_SECRET }}
          aws-region: ${{ secrets.AWS_ECR_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build image
        run: >-
          docker build -f Dockerfile.prod
          --build-arg BUILDKIT_INLINE_CACHE=1
          --build-arg NEXT_PUBLIC_ENV_ARG="production"
          --cache-from "$IMAGE_CD:$LATEST_TAG"
          --cache-from "$IMAGE_CI:$LATEST_TAG" -t "$IMAGE_CD:$IMAGE_TAG" .

      - name: Tag image as latest
        run: docker tag "$IMAGE_CD:$IMAGE_TAG" "$IMAGE_CD:$LATEST_TAG"

      - name: Push image
        run: docker push $IMAGE_CD --all-tags

  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: build
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_CD_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_CD_ACCESS_KEY_SECRET }}
          aws-region: ${{ secrets.AWS_ECR_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh

      - name: Login to Registry
        run: heroku container:login

      - name: Pull production image
        run: docker pull "$IMAGE_CD:$LATEST_TAG"

      - name: Tag image
        run: docker tag $IMAGE_CD registry.heroku.com/$HEROKU_APP_NAME/web

      - name: Push image
        run: docker push registry.heroku.com/$HEROKU_APP_NAME/web

      - name: Release app
        run: heroku container:release web --app $HEROKU_APP_NAME